(*
This file is generated by Cogent

*)

theory U8rec_uabsfunsdeclfix_SCorres_Normal
imports "U8rec_uabsfunsdeclfix_Shallow_Normal"
"U8rec_uabsfunsdeclfix_Deep_Normal"
"CogentShallow.Shallow_Tac"
begin

overloading
  valRel_T0 \<equiv> valRel
begin
  definition valRel_T0: "\<And>\<xi> x v. valRel_T0 \<xi> (x :: 't_a T0) v \<equiv> \<exists>f_a. v = VRecord [f_a] \<and> valRel \<xi> (T0.a\<^sub>f x) f_a"
end

lemmas valRel_records =
  valRel_T0
  T0.defs

context shallow begin

lemma scorres_struct_T0 :
  "\<And>\<gamma> \<xi> s_a d_a.
  scorres s_a d_a \<gamma> \<xi> \<Longrightarrow>
  scorres (T0.make s_a) (Struct ts [d_a]) \<gamma> \<xi>"
  apply (clarsimp simp: scorres_def valRel_T0 T0.defs elim!: v_sem_elims)
  done

lemmas scorres_structs =
  scorres_struct_T0

lemma shallow_tac_rec_field_T0__a :
  "shallow_tac_rec_field \<xi> (T0.a\<^sub>f :: ('t_a) T0 \<Rightarrow> 't_a) T0.a\<^sub>f_update 0"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T0)
  done

lemmas scorres_rec_fields =
  shallow_tac_rec_field_T0__a

local_setup \<open>
gen_scorres_lemmas "U8rec_uabsfunsdeclfix_ShallowShared" "U8rec_uabsfunsdeclfix_Shallow_Normal" "U8rec_uabsfunsdeclfix_Deep_Normal" Cogent_abstract_functions Cogent_functions
\<close>


end

end
