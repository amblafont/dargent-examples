(*
This file is generated by Cogent

*)

theory Random_seed_master_Shallow_Normal
imports "Random_seed_master_ShallowShared"
begin

definition
  main :: " Seed \<Rightarrow>  SeedValue\<^sub>T"
where
  "main ds\<^sub>0 \<equiv> HOL.Let ds\<^sub>0 (\<lambda>seed. HOL.Let (rand_with_seed seed) (\<lambda>an\<^sub>0. HOL.Let (take\<^sub>c\<^sub>o\<^sub>g\<^sub>e\<^sub>n\<^sub>t an\<^sub>0 SeedValue.seed\<^sub>f) (\<lambda>(seed,r). HOL.Let (rand_with_seed seed) (\<lambda>an\<^sub>2. HOL.Let (take\<^sub>c\<^sub>o\<^sub>g\<^sub>e\<^sub>n\<^sub>t an\<^sub>2 SeedValue.seed\<^sub>f) (\<lambda>(seed,r2). HOL.Let (SeedValue.value\<^sub>f r) (\<lambda>an\<^sub>6. HOL.Let (SeedValue.value\<^sub>f r2) (\<lambda>an\<^sub>8. HOL.Let ((+) an\<^sub>6 an\<^sub>8) (\<lambda>an\<^sub>5. SeedValue.make seed an\<^sub>5))))))))"

end
