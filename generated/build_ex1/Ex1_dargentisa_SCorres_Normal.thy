(*
This file is generated by Cogent

*)

theory Ex1_dargentisa_SCorres_Normal
imports "Ex1_dargentisa_Shallow_Normal"
"Ex1_dargentisa_Deep_Normal"
"CogentShallow.Shallow_Tac"
begin

overloading
  valRel_T0 \<equiv> valRel
begin
  definition valRel_T0: "\<And>\<xi> x v. valRel_T0 \<xi> (x :: ('t_field0, 't_field1) T0) v \<equiv> \<exists>f_field0 f_field1. v = VRecord [f_field0, f_field1] \<and> valRel \<xi> (T0.field0\<^sub>f x) f_field0 \<and> valRel \<xi> (T0.field1\<^sub>f x) f_field1"
end

overloading
  valRel_T1 \<equiv> valRel
begin
  definition valRel_T1: "\<And>\<xi> x v. valRel_T1 \<xi> (x :: 't_field0 T1) v \<equiv> \<exists>f_field0. v = VRecord [f_field0] \<and> valRel \<xi> (T1.field0\<^sub>f x) f_field0"
end

overloading
  valRel_T2 \<equiv> valRel
begin
  definition valRel_T2: "\<And>\<xi> x v. valRel_T2 \<xi> (x :: ('t_field0, 't_field1, 't_field2, 't_field3, 't_field4, 't_field5, 't_field6) T2) v \<equiv> \<exists>f_field0 f_field1 f_field2 f_field3 f_field4 f_field5 f_field6. v = VRecord [f_field0, f_field1, f_field2, f_field3, f_field4, f_field5, f_field6] \<and> valRel \<xi> (T2.field0\<^sub>f x) f_field0 \<and> valRel \<xi> (T2.field1\<^sub>f x) f_field1 \<and> valRel \<xi> (T2.field2\<^sub>f x) f_field2 \<and> valRel \<xi> (T2.field3\<^sub>f x) f_field3 \<and> valRel \<xi> (T2.field4\<^sub>f x) f_field4 \<and> valRel \<xi> (T2.field5\<^sub>f x) f_field5 \<and> valRel \<xi> (T2.field6\<^sub>f x) f_field6"
end

overloading
  valRel_T3 \<equiv> valRel
begin
  definition valRel_T3: "valRel_T3 \<xi> (v :: ('a, 'b) T3) v' \<equiv> case_T3 (\<lambda>x. \<exists>x'. v' = VSum ''Con0'' x' \<and> valRel \<xi> x x') (\<lambda>x. \<exists>x'. v' = VSum ''Con1'' x' \<and> valRel \<xi> x x') v"
end

overloading
  valRel_Ex \<equiv> valRel
begin
  definition valRel_Ex: "\<And>\<xi> x v. valRel_Ex \<xi> (x :: ('t_field0, 't_field1, 't_field2) Ex) v \<equiv> \<exists>f_field0 f_field1 f_field2. v = VRecord [f_field0, f_field1, f_field2] \<and> valRel \<xi> (Ex.field0\<^sub>f x) f_field0 \<and> valRel \<xi> (Ex.field1\<^sub>f x) f_field1 \<and> valRel \<xi> (Ex.field2\<^sub>f x) f_field2"
end

lemma valRel_T3_Con0[simp] :
  "valRel \<xi> (T3.Con0 x) (VSum ''Con0'' x') = valRel \<xi> x x'"
  apply (simp add: valRel_T3)
  done

lemma valRel_T3_Con1[simp] :
  "valRel \<xi> (T3.Con1 x) (VSum ''Con1'' x') = valRel \<xi> x x'"
  apply (simp add: valRel_T3)
  done

lemmas valRel_records =
  valRel_T0
  T0.defs
  valRel_T1
  T1.defs
  valRel_T2
  T2.defs
  valRel_Ex
  Ex.defs

lemmas valRel_variants =
  valRel_T3

context shallow begin

lemma scorres_struct_T0 :
  "\<And>\<gamma> \<xi> s_field0 s_field1 d_field0 d_field1.
  scorres s_field0 d_field0 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field1 d_field1 \<gamma> \<xi> \<Longrightarrow>
  scorres (T0.make s_field0 s_field1) (Struct ts [d_field0, d_field1]) \<gamma> \<xi>"
  apply (clarsimp simp: scorres_def valRel_T0 T0.defs elim!: v_sem_elims)
  done

lemma scorres_struct_T1 :
  "\<And>\<gamma> \<xi> s_field0 d_field0.
  scorres s_field0 d_field0 \<gamma> \<xi> \<Longrightarrow>
  scorres (T1.make s_field0) (Struct ts [d_field0]) \<gamma> \<xi>"
  apply (clarsimp simp: scorres_def valRel_T1 T1.defs elim!: v_sem_elims)
  done

lemma scorres_struct_T2 :
  "\<And>\<gamma> \<xi> s_field0 s_field1 s_field2 s_field3 s_field4 s_field5 s_field6 d_field0 d_field1 d_field2 d_field3 d_field4 d_field5 d_field6.
  scorres s_field0 d_field0 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field1 d_field1 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field2 d_field2 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field3 d_field3 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field4 d_field4 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field5 d_field5 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field6 d_field6 \<gamma> \<xi> \<Longrightarrow>
  scorres (T2.make s_field0 s_field1 s_field2 s_field3 s_field4 s_field5 s_field6) (Struct ts [d_field0, d_field1, d_field2, d_field3, d_field4, d_field5, d_field6]) \<gamma> \<xi>"
  apply (clarsimp simp: scorres_def valRel_T2 T2.defs elim!: v_sem_elims)
  done

lemma scorres_struct_Ex :
  "\<And>\<gamma> \<xi> s_field0 s_field1 s_field2 d_field0 d_field1 d_field2.
  scorres s_field0 d_field0 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field1 d_field1 \<gamma> \<xi> \<Longrightarrow>
  scorres s_field2 d_field2 \<gamma> \<xi> \<Longrightarrow>
  scorres (Ex.make s_field0 s_field1 s_field2) (Struct ts [d_field0, d_field1, d_field2]) \<gamma> \<xi>"
  apply (clarsimp simp: scorres_def valRel_Ex Ex.defs elim!: v_sem_elims)
  done

lemmas scorres_structs =
  scorres_struct_T0
  scorres_struct_T1
  scorres_struct_T2
  scorres_struct_Ex

lemma shallow_tac_rec_field_T0__field0 :
  "shallow_tac_rec_field \<xi> (T0.field0\<^sub>f :: ('t_field0, 't_field1) T0 \<Rightarrow> 't_field0) T0.field0\<^sub>f_update 0"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T0)
  done

lemma shallow_tac_rec_field_T0__field1 :
  "shallow_tac_rec_field \<xi> (T0.field1\<^sub>f :: ('t_field0, 't_field1) T0 \<Rightarrow> 't_field1) T0.field1\<^sub>f_update 1"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T0)
  done

lemma shallow_tac_rec_field_T1__field0 :
  "shallow_tac_rec_field \<xi> (T1.field0\<^sub>f :: ('t_field0) T1 \<Rightarrow> 't_field0) T1.field0\<^sub>f_update 0"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T1)
  done

lemma shallow_tac_rec_field_T2__field0 :
  "shallow_tac_rec_field \<xi> (T2.field0\<^sub>f :: ('t_field0, 't_field1, 't_field2, 't_field3, 't_field4, 't_field5, 't_field6) T2 \<Rightarrow> 't_field0) T2.field0\<^sub>f_update 0"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T2)
  done

lemma shallow_tac_rec_field_T2__field1 :
  "shallow_tac_rec_field \<xi> (T2.field1\<^sub>f :: ('t_field0, 't_field1, 't_field2, 't_field3, 't_field4, 't_field5, 't_field6) T2 \<Rightarrow> 't_field1) T2.field1\<^sub>f_update 1"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T2)
  done

lemma shallow_tac_rec_field_T2__field2 :
  "shallow_tac_rec_field \<xi> (T2.field2\<^sub>f :: ('t_field0, 't_field1, 't_field2, 't_field3, 't_field4, 't_field5, 't_field6) T2 \<Rightarrow> 't_field2) T2.field2\<^sub>f_update 2"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T2)
  done

lemma shallow_tac_rec_field_T2__field3 :
  "shallow_tac_rec_field \<xi> (T2.field3\<^sub>f :: ('t_field0, 't_field1, 't_field2, 't_field3, 't_field4, 't_field5, 't_field6) T2 \<Rightarrow> 't_field3) T2.field3\<^sub>f_update 3"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T2)
  done

lemma shallow_tac_rec_field_T2__field4 :
  "shallow_tac_rec_field \<xi> (T2.field4\<^sub>f :: ('t_field0, 't_field1, 't_field2, 't_field3, 't_field4, 't_field5, 't_field6) T2 \<Rightarrow> 't_field4) T2.field4\<^sub>f_update 4"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T2)
  done

lemma shallow_tac_rec_field_T2__field5 :
  "shallow_tac_rec_field \<xi> (T2.field5\<^sub>f :: ('t_field0, 't_field1, 't_field2, 't_field3, 't_field4, 't_field5, 't_field6) T2 \<Rightarrow> 't_field5) T2.field5\<^sub>f_update 5"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T2)
  done

lemma shallow_tac_rec_field_T2__field6 :
  "shallow_tac_rec_field \<xi> (T2.field6\<^sub>f :: ('t_field0, 't_field1, 't_field2, 't_field3, 't_field4, 't_field5, 't_field6) T2 \<Rightarrow> 't_field6) T2.field6\<^sub>f_update 6"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_T2)
  done

lemma shallow_tac_rec_field_Ex__field0 :
  "shallow_tac_rec_field \<xi> (Ex.field0\<^sub>f :: ('t_field0, 't_field1, 't_field2) Ex \<Rightarrow> 't_field0) Ex.field0\<^sub>f_update 0"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_Ex)
  done

lemma shallow_tac_rec_field_Ex__field1 :
  "shallow_tac_rec_field \<xi> (Ex.field1\<^sub>f :: ('t_field0, 't_field1, 't_field2) Ex \<Rightarrow> 't_field1) Ex.field1\<^sub>f_update 1"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_Ex)
  done

lemma shallow_tac_rec_field_Ex__field2 :
  "shallow_tac_rec_field \<xi> (Ex.field2\<^sub>f :: ('t_field0, 't_field1, 't_field2) Ex \<Rightarrow> 't_field2) Ex.field2\<^sub>f_update 2"
  apply (fastforce intro!: shallow_tac_rec_fieldI simp: valRel_Ex)
  done

lemmas scorres_rec_fields =
  shallow_tac_rec_field_T0__field0
  shallow_tac_rec_field_T0__field1
  shallow_tac_rec_field_T1__field0
  shallow_tac_rec_field_T2__field0
  shallow_tac_rec_field_T2__field1
  shallow_tac_rec_field_T2__field2
  shallow_tac_rec_field_T2__field3
  shallow_tac_rec_field_T2__field4
  shallow_tac_rec_field_T2__field5
  shallow_tac_rec_field_T2__field6
  shallow_tac_rec_field_Ex__field0
  shallow_tac_rec_field_Ex__field1
  shallow_tac_rec_field_Ex__field2

local_setup \<open>
gen_scorres_lemmas "Ex1_dargentisa_ShallowShared" "Ex1_dargentisa_Shallow_Normal" "Ex1_dargentisa_Deep_Normal" Cogent_abstract_functions Cogent_functions
\<close>


end

end
